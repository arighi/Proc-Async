Types of requests:
------------------

START - start an external program and return its ID
  Input: - (mandatory) the full command-line of the external program
         - ... (wait for it...)
  Return: a (time and location) unique job ID of the external program (not a PID)

STATUS - give me status of a previously started external program
  Input: - (mandatory) job ID (as returned from the START request)
  Return: a (numeric?) code: UNKNOWN, CREATED, RUNNING, COMPLETED,
                             TERMINATED_BY_REQUEST, TERMINATED_BY_ERROR,
                             REMOVED ?

PROGRESS - give me status AND progress report (which may be the full result)
  Input: - (mandatory) job ID (as returned from the START request)
         - where to take progress from (STDERR, STDOUT, FILE, WRAPPER)
         - full progress report or only partial (tail what was not yet asked for)
         - return progress report or a file name with the progress report?
  Return: status (see above)
          progress report

RESULT - the same as progress; which type name should I use?

KILL - kill the external program; wait until it is killed
  Input: - (mandatory) job ID (as returned from the START request)
  Return: status (see above)

CLEAN - remove files from the job
  Input: - (mandatory) job ID (as returned from the START request)

Role of the wrapper (monitor) parent:
-------------------------------------

* fork the real external process
* updates its status in the configuration file

Configuration file:
-------------------

* created on-the-fly within a directory based on the unique JOB id:

  /blah/blah/<JOB-ID> ... directory (it also becomes a working directory of the external process)
     stdout.file  ... where the external process writes its STDOUT
     stderr.file  ... where the external process writes its STDERR
     pid.file     ... where the wrapper stores the PID of the external process
     status.cfg   ... the configuration file

* status.cfg:

  [job]
  id = ... (the same as this directory basename)
  args = ... comma-separated arguments to start the external process
  options = ...
  status = ...current job status
  time = ...starting time of the external process (display format, with time-zone, etc.)
  started = ...starting time of the external process (number)
  ended = ...ending time of the external process (number)
